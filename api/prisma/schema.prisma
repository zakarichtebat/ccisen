// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int           @id @default(autoincrement())
  nom                 String
  prenom              String
  email               String        @unique
  motDePasse          String
  numRegistreCommerce String        @unique
  secteurActivite     String
  telephone           String
  adresse             String
  role                String        @default("client")
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  rendezVous          RendezVous[]
  inscriptions        Inscription[]
}

model Service {
  id          Int          @id @default(autoincrement())
  nom         String
  description String       @db.Text
  duree       Int // Durée en minutes
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  rendezVous  RendezVous[]
}

model RendezVous {
  id        Int      @id @default(autoincrement())
  date      DateTime
  heure     String // Format HH:MM
  status    String   @default("en_attente") // en_attente, confirmé, annulé
  notes     String?  @db.Text
  userId    Int
  serviceId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id])
  service Service @relation(fields: [serviceId], references: [id])
}

model PlageHoraire {
  id         Int      @id @default(autoincrement())
  jour       String // lundi, mardi, etc.
  heureDebut String // Format HH:MM
  heureFin   String // Format HH:MM
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Formation {
  id              Int           @id @default(autoincrement())
  titre           String
  description     String        @db.Text
  dateDebut       DateTime
  dateFin         DateTime
  heureDebut      String // Format HH:MM
  heureFin        String // Format HH:MM
  lieu            String
  maxParticipants Int           @default(20)
  prix            Float         @default(0)
  statut          String        @default("active") // active, inactive, complet
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  inscriptions    Inscription[]
}

model Inscription {
  id              Int      @id @default(autoincrement())
  userId          Int
  formationId     Int
  statut          String   @default("en_attente") // en_attente, confirmé, annulé
  dateInscription DateTime @default(now())
  notes           String?  @db.Text
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  user      User      @relation(fields: [userId], references: [id])
  formation Formation @relation(fields: [formationId], references: [id])

  @@unique([userId, formationId])
}
